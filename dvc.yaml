stages:
  data_ingestion:
    cmd: python src/cnnClassifier/pipeline/stage_01_data_ingestion.py #file excution
    deps: #depends on (file itself)
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
      - config/config.yaml #config
    # outputs
    outs:
      - artifacts/data_ingestion/kidney-ct-scan-image

  prepare_base_model:
    cmd: python src/cnnClassifier/pipeline/stage_02_prepare_base_model.py #file excution
    deps: #depends on (file itself & other)
      - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml #config
    # params.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    
    # outputs
    outs:
      - artifacts/prepare_base_model

  training:
    cmd: python src/cnnClassifier/pipeline/stage_03_model_training.py #file execution

    deps: #depends on (file itself & other)
      - src/cnnClassifier/pipeline/stage_03_model_training.py
      - config/config.yaml #config
      - artifacts/data_ingestion/kidney-ct-scan-image
      - artifacts/prepare_base_model
    # params.yaml
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
    
    # outputs
    outs:
      - artifacts/training/model.h5

  evaluation:
    cmd: python src/cnnClassifier/pipeline/stage_04_model_evaluation.py
    deps: #depends on (file itself & other)
      - src/cnnClassifier/pipeline/stage_04_model_evaluation.py
      - config/config.yaml #config
      - artifacts/data_ingestion/kidney-ct-scan-image
      - artifacts/training/model.h5

    # params.yaml
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
      - scores.json:
          cache: false

